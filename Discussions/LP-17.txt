Lesson Plan 17, ISTA-220 Cohort 3
Chapter 13, C# Step by Step
Sept 5, 2017


4.2 Discussion Questions

Answer the discussion questions in writing.

1. What is the di?erence between a managed resource and an unmanaged resource?
usually used to describe something not directly under the control of the garbage collector. 
For example, if you open a connection to a database server this will use resources on the server 
(for maintaining the connection) and possibly other non-.net resources on the client machine, 
if the provider isn't written entirely in managed code.

2. When is memory for an object (reference type) allocated? When is the memory deallocated?
Typically, an application will only have a single appdomain running user code, but Asp.Net 
and other hosting applications may have many.

3. What is a destructor?
Destructor" functions are the inverse of constructor functions. They are called when objects 
are destroyed (deallocated). Designate a function as a class's destructor by preceding the class 
name with a tilde (~). For example, the destructor for class String is declared: ~String().

4. What is the difference in syntax between a constructor and a destructor?
That is the di?erence in syntax between a constructor and a destructor?

5. Give some examples of scarce resources. Why would you want to manage scarce resources?


6. What is exception-safe disposal?


7. How do you think that the using statement works for resource management? Give an informal, 
English language, explanation of how it works.


8. What ill effects could result from attempting to dispose of a resource more than once?
   A simple example is holding an open file, which you need to be closed at certain moment, as soon as 
you don't need it any more. Of course, you could provide a method Close, but having it in Dispose and 
using pattern like using (var f = new MyFile(path)) { /*process it*/ } would be more exception-safe.

9. We will look at threads later in the term. For now, what is your understanding of how 
threads interact with resource management? A good guess is a sufficient answer to this question.
   You do not know what is going o happen could be a small problem or catastrophic.

10. Why does the book recommend not attempting to force the garbage collector? Are their 
any exceptions to this recommendation?

Lesson Plan 21, ISTA-220 Cohort 3
Chapter 15, C# Step by Step
September 11, 2017

1 Discussion Questions
Chapter 15, Pages: 329 — 352


1. What is the di?erence between a property and a ?eld?


2. What is the di?erence between a property and a method?
   Declares an integer type variable x and assigns it the value 

3. What is your understanding of encapsulation?


4. Some languages are case insensitive, that is, an ‘a” and an “A” are 
considered to be the same letter. C# is case sensitive. What implications 
does this have regarding the naming of variables, methods, and other identi?ers? 
Do you think that the di?erence in case in the initial character of two di?erent 
identi?ers is su?cient to distinguish them?


5. Give an example that is not in the book of an instance where you might want to 
use a read-only property. Give an example not in the book of an instance where you 
might want to use s write-only property.


6. Can you think of a reason why you might ever want to make getters and setters private?
 Give an example. Also, make a case why getters and setters should never be private.


7. What are restrictions on the use of properties?


8. What is an object initializer? What is the syntax for an object initializer?

9. Assume that users were assigned read, write, and execute permissions according to this 
scheme: read = 1, write = 2, execute = 4. How would you interpret the following user permissions:
(a) permission = 0
No permissions.
(b) permission = 1
Read.
(c) permission = 2
Write.
(d) permission = 3
Read and Write.
(e) permission = 4
Execute.
(f) permission = 5
Read and Execute.
(g) permission = 6


10.Write and Execute. (h) permission = 7
Read, Write, and Execute.
Answer the previous question by converting the decimal permissions into binary permissions. What does this tell you about using this scheme of permissions?
This scheme of permissions was written with integer indexing as an array of Boolean values.
(a) permission = 0
No permissions/000.
(b) permission = 1
Read/001.
(c) permission = 2
Write/010.
(d) permission = 3
Read and Write/011.
(e) permission = 4
Execute/100.
(f) permission = 5
Read and Execute/101.
(g) permission = 6
Write and Execute/110.
(h) permission = 7
Read, Write, and Execute/111.
